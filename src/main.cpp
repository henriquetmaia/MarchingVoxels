#include <iostream>
#include <stdlib.h>
#include "Viewer.h"

using namespace std;
using namespace NITRO;

int main( int argc, char** argv )
{
	if( argc != 6 )
	{
		cerr << "usage: " << argv[0] << " x_grid y_grid z_grid density_val density_field.df " << endl;
		return 1;
	}


	// create a staggered grid spatial hash map of all the points into the volume grid size
	// each grid voxel represents a vertex of the grid we are using for marching cubes
	// once its filled, visit each non-empty grid voxel and interpolate the value of sample particles onto vertex
	// store these values (or just an on/off bool) on the volume_grid vertices in a accesible way for later

	Viewer viewer;
	viewer.fields = *new Space( atoi( argv[1] ), atoi( argv[2] ), atoi( argv[3] ), atof( argv[4] ) );
	for( int arg = 5; arg < argc; ++arg ){
		viewer.fields.addField( argv[arg] );
	}
	viewer.init();


	// perform marching cubes 

	// Need to visualize the density field points (check)
	// Need to visualize the voxel_grid points
	// Need to visualize the triangles generated by Marching Cubes

	// Create better examples/test sets

	// support mesh operations discussed in paper
	// support many fields, meshes, etc.

	return 0;
}

